#!/usr/bin/env bash 

readlink=readlink
if [ "$(uname)" = "AIX" ]; then
  readlink="echo"
fi

# work around readlink versions not having -f option
if ! fullpath1=$($readlink "$0"); then
  fullpath1="$0"
else
  if [ "${fullpath1##/}" = "$fullpath1" ] && [ "${fullpath1##~}" = "$fullpath1" ]; then
    # relative path, prepend directory where executable was found
    lpath=$(dirname "$0")
    fullpath1=$lpath/$fullpath1
  fi
fi

progdir=$(dirname "$fullpath1")
runningdir=$(pwd)
if [ "${progdir##/}" != "$progdir" ] || [ "${progdir##~}" != "$progdir" ]; then
  # absolute path
  fullpath=$progdir
else
  # relative path
  if [ "$progdir" != "." ]; then
    fullpath=$runningdir/$progdir
  else
    fullpath=$runningdir
  fi
fi

# work around readlink versions not having -f option
if ! fullpath1=$($readlink "$fullpath"); then
  fullpath1=$fullpath
fi

if [ -d "${GRSISYS}/GRSIData/lib" ] ; then
	libdir="${GRSISYS}/GRSIData/lib"
elif [ -d "${GRSISYS}/lib" ] ; then
	libdir="${GRSISYS}/lib"
else
	echo "Couldn't find either $GRSISYS/GRSIData/lib or $GRSISYS/lib directory, not sure what to do"
	exit
fi
if [ -d "${GRSISYS}/GRSIData/include" ] ; then
	incdir="${GRSISYS}/GRSIData/include"
elif [ -d "${GRSISYS}/include" ] ; then
	incdir="${GRSISYS}/include"
else
	echo "Couldn't find either ${GRSISYS}/GRSIData/include or ${GRSISYS}/include directory, not sure what to do"
	exit
fi

libdir="${GRSISYS}/GRSIData/lib"
incdir="${GRSISYS}/GRSIData/include"

libs="TAngularCorrelation TGRSIDataParser TGRSIFormat TGenericDetector TAries TCSM TDescant TGriffin TLaBr TMidas TPaces TRF TS3 TSceptar TSharc TSiLi TTAC TTigress TTip TTriFoil TZeroDegree TEmma TTrific TRcmp TSharc2 TDemand"

if [[ $(root-config --cflags) == *"-std="* ]]
then
	cflags="-I$incdir"
else
	cflags="-std=c++11 -I$incdir"
fi

usage="\
Usage: grsi-config [--version] [--incdir] [--cflags] [--libs] [--help]"

if test $# -eq 0; then
  echo "${usage}" 1>&2
  exit 1
fi

out=""

incdirout=no
cflagsout=no
libsout=no

while test $# -gt 0; do
  case $1 in
    --version)
      ### Output the version number.  If GVersion.h can not be found, give up.
      if test -r "${incdir}/GVersion.h"; then
        tmp=$(sed -n 's,.*GRSI_RELEASE *\"\(.*\)\".*,\1,p' < "${incdir}/GVersion.h")
        out="$out $tmp"
      else
        echo "cannot read ${incdir}/GVersion.h"
        exit 1
      fi
      ;;
    --incdir)
      if test "$incdirout" = "yes" ; then
        shift
        continue
      fi
      incdirout="yes"
		if [ -z "$out" ] ; then
			out="$incdir"
		else
			out="$out $incdir "
		fi
      ;;
    --cflags)
      if test "$cflagsout" = "yes" ; then
        shift
        continue
      fi
      cflagsout="yes"
		if [ -z "$out" ] ; then
			out="$cflags"
		else
			out="$out $cflags "
		fi
      ;;
    --libs)
      if test "$libsout" = "yes" ; then
        shift
        continue
      fi
      libsout="yes"
		if [ -d "${libdir}" ] ; then
			if [ -z "$out" ] ; then
				out="-L${libdir}"
			else
				out="$out -L${libdir}"
			fi
		fi
		for library in $libs ; do
			if [ -e "${libdir}/lib${library}.so" ] || [ -e "${libdir}/lib${library}.dylib" ] ; then
				out="$out -l${library}"
			fi
		done
      ;;
    --help)
      ### Print a helpful message...
      progname=$(basename "$0")
      echo "Usage: ${progname} [options]"
      echo ""
      echo "  --version       Print the current GRSI Version number."
      echo "  --incdir        Print header path."
      echo "  --cflags        Print compiler flags and header path."
      echo "  --libs          Print libdir + libraries."
      echo "  --help          Print what you see here."
      exit 0
      ;;
    *)
      ### Give an error
      echo "Unknown argument \"$1\"!" 1>&2
      echo "$usage" 1>&2
      exit 1
      ;;
   esac
   shift 
done

echo "$out"

